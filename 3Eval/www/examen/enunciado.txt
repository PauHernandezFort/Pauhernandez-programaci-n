Para la realización de la prueba debes descargar los ficheros asociados. Se trata de una prueba individual y bajo ningún concepto ni se permite la copia ni se permite estar conectado a internet. Puedes hacer uso de cuantos recursos necesites y tengas descargados (todo off-line). Añade todos los comentarios que consideres oportunos para explicar tu código, y usa la notación camelCase para los identificadores. Sube todo a GitHub con el nombre del repositorio público ex3inicial+apellido (en mi caso sería ex3vmonfort).

Entrega:

-La URL del repositorio
-El zip descargado

Ejercicio 1.- (1 puntos) Crea la estructura necesaria para la aplicación en php, según muestra la imagen:



Habilita un mecanismo de autoloading. Guarda los ficheros de clase en un directorio llamado "clases". El resto de ficheros php se ubicarán sobre la raíz, tanto los php como los js. Existe un directorio "config" auxiliar con el fichero db.csv, que debe contener las credenciales de BD.
Crea una clase Conexión que contenga toda la lógica de conexión a la base de datos "stadium". Toda clase que tenga uso con la base de datos debe heredar de esta clase. Debes importar la base de datos desde el fichero sql proporcionado con esta prueba evaluativa.
Ejercicio 2.- (1 puntos) La base de datos contiene información sobre los focos que iluminan un estadio de fútbol. Se pretende modelar cada uno de estos dispositivos de iluminación:

crea una clase "Lamp", cuyos atributos deben ser almacenar el identificador de la lámpara, su nombre, si se encuentra encendida o no, la denominación del modelo, la potencia en vatios y la zona del estadio donde está ubicada.
Crea los getter, setter y/o constructor solo en caso de necesitarlos
Ejercicio 3.- Como se pretende controlar la iluminación del estadio, debemos desarrollar la lógica necesaria para listar e interactuar con la lámparas, y para ello debes crear una clase "Lighting", con los siguientes métodos:

(1 puntos) importLamps($file) -> que en base al fichero lighting.csv, poblará la tabla "lamps". Esta acción debe ser transaccional e incluir un borrado previo de la tabla. Además, debes hacer las inserciones a través de estamentos preparados. Debes crear el script import.php capaz de hacer uso de este método.
(1 puntos) getAllLamps() -> que devolverá todas las filas de la tabla "lamps" en un array, encapsulando cada fila en un objeto de tipo "Lamp".
(1 puntos) drawLampsList() -> que mostrará, según el fichero index.html de muestra proporcionado, el listado de lámparas que proporciona getAllLamps(). Debes crear el script index.php capaz de hacer uso de este método.
(IMPRESCINDIBLE) -> deberás de mostrar el total de la potencia por zona (solo de las lámparas encendidas). Muestra esa información en el lugar que desees del index. Deberás de hacer uno o varios métodos que retornen esos valores.
Ejercicio 4.- El listado creado con anterioridad necesita tener cierta interactividad. Para ello:

(1 puntos) Convierte los iconos  o en enlaces, de forma que sean capaces de cambiar el estado de encendido a apagado o viceversa. 
(0.5 puntos) el método changeStatus($id, $status) debe ser capaz de actualizar esta información en la base de datos. Debes crear el script changestatus.php capaz de hacer uso de este método y re-dirigir de nuevo a la página que contiene el listado.
Ejercicio 5.- Dado que son muchas las lámparas a tener en cuenta, se propone un formulario para realizar el filtrado por zona de las lámparas. Para ello

(0.5 puntos) el método drawZonesOptions() poblará el desplegable con la información de las zonas disponibles, quedando seleccionada la opción elegida en el desplegable, si es que la hubiera.
(1 puntos) al enviar el formulario, el listado se debe actualizar con solo las lámparas de la zona elegida, 
(0.5 puntos) ten en cuenta que al cambiar el estado de una lámpara, el listado debe conservar el filtrado actual.
Ejercicio 6.- Habilita en un fichero llamado ev3.js, la lógica para:

(1.5 puntos) aumentar tanto el tamaño de visualización del apartado IMPRESCINDIBLE del Ejercicio 3 como el color al pasar por encima con el ratón.